basics:
data -> raw facts (unprocessed info)
info -> processed data
compiler -> compile whole code at once
interpreter -> interpret line by line
programming -> dealing with problem solving
programming langs -> low, mid(jjk), high
low level -> machine code, binary lang 
mid -> commands to solve problem
high -> easily understood by humans (cpp, python, java, etc)
	object oriented
	function oriented (LISP)
	logical (PROLOG)

C++ :
introduced by bjarne strous in 1983
c++ -> c with classes 1979 (increment of c)
c++ 23 -> latest v
basic structure
	linking section (link header) (basic -> iostream) (# -> preprocessor)
		"" can be used instead of <> when including
		(<> -> search in bin folder, "" -> search in entire cpp installation folder)
		iostream -> ip op stream -> contains cin and cout
	using namespace std 
		library where we can import stdin and out streams with keyword
	global declaration -> define global vars
	funciton declaration -> define funcs
	main section -> only use int main 
		if return is 1, error in code
		if return is 0, no errors
	local declaration -> local scope declarations
tokens
	smallest individual unit in a program 
	types of tokens
		identifier -> indentifies names of vars, funcs, classes, methods, etc
		variable -> value in a particular memory location
		keywords -> reserved words like int, etc
		literals/constants -> 
		operators -> unary, binary, ternary (c?b1:b2)
		datatypes -> primitive (builtin: int(4), float(4), char(1), double(8), bool(1), void(0))
					 derived (struct, enum, etc),object	
		modifier -> modify size of datatype / change characteristic (size,val,etc)
		<< -> insertion operator (l-shift)
		>> -> extraction operator (r-shift)
		main() -> considered both user-defined as well as built-in
		
